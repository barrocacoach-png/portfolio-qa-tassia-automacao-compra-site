{
  "stats": {
    "suites": 5,
    "tests": 23,
    "passes": 23,
    "pending": 0,
    "failures": 0,
    "testsRegistered": 23,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "start": "2025-10-05T02:59:49.597Z",
    "end": "2025-10-05T03:00:38.815Z",
    "duration": 49218
  },
  "results": [
    {
      "uuid": "850a30c3-6843-4d43-b024-27d4180d3a26",
      "title": "",
      "fullFile": "cypress\\e2e\\gerenciar-itens-no-carrinho\\gerenciar-itens-no-carrinho.cy.js",
      "file": "cypress\\e2e\\gerenciar-itens-no-carrinho\\gerenciar-itens-no-carrinho.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b42031ec-5957-490f-b5a1-9a63bb476a1a",
          "title": "Gerenciando carrinho",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve exibir o botão \"Add to cart\" em todos os produtos como condição inicial",
              "fullTitle": "Gerenciando carrinho Deve exibir o botão \"Add to cart\" em todos os produtos como condição inicial",
              "timedOut": null,
              "duration": 2589,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// 1. Pega todos os botões que têm o atributo 'add-to-cart'\n// (Usando uma busca que olha para todos os botões de adição)\ncy.get('button[id^=\"add-to-cart\"]').each($btn => {\n  // 2. Verifica se o botão está visível e contém o texto 'Add to cart'\n  cy.wrap($btn).should('be.visible').and('contain', 'Add to cart');\n});",
              "err": {},
              "uuid": "b6933ec3-fa10-4620-928a-4e49a5b6053a",
              "parentUUID": "b42031ec-5957-490f-b5a1-9a63bb476a1a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve validar o ciclo Add/Remove para o produto: sauce-labs-backpack",
              "fullTitle": "Gerenciando carrinho Deve validar o ciclo Add/Remove para o produto: sauce-labs-backpack",
              "timedOut": null,
              "duration": 1340,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Cria seletores dinâmicos para o produto atual da iteração\nconst ADD_SELECTOR = `[data-test=\"add-to-cart-${produtoId}\"]`;\nconst REMOVE_SELECTOR = `[data-test=\"remove-${produtoId}\"]`;\n// Adicionar o item ao carrinho\ncy.get(ADD_SELECTOR).click();\n// Asserção: Confirma que o estado mudou para \"Remove\"\ncy.get(REMOVE_SELECTOR).should('be.visible').and('contain', 'Remove');\n// Remove o item do carrinho\ncy.get(REMOVE_SELECTOR).click();\n// Asserção: Confirma que o estado voltou para \"Add to cart\"\ncy.get(ADD_SELECTOR).should('be.visible').and('contain', 'Add to cart');",
              "err": {},
              "uuid": "2e864ae4-ffaa-442b-8bfa-9f7747976621",
              "parentUUID": "b42031ec-5957-490f-b5a1-9a63bb476a1a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve validar o ciclo Add/Remove para o produto: sauce-labs-bike-light",
              "fullTitle": "Gerenciando carrinho Deve validar o ciclo Add/Remove para o produto: sauce-labs-bike-light",
              "timedOut": null,
              "duration": 1184,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Cria seletores dinâmicos para o produto atual da iteração\nconst ADD_SELECTOR = `[data-test=\"add-to-cart-${produtoId}\"]`;\nconst REMOVE_SELECTOR = `[data-test=\"remove-${produtoId}\"]`;\n// Adicionar o item ao carrinho\ncy.get(ADD_SELECTOR).click();\n// Asserção: Confirma que o estado mudou para \"Remove\"\ncy.get(REMOVE_SELECTOR).should('be.visible').and('contain', 'Remove');\n// Remove o item do carrinho\ncy.get(REMOVE_SELECTOR).click();\n// Asserção: Confirma que o estado voltou para \"Add to cart\"\ncy.get(ADD_SELECTOR).should('be.visible').and('contain', 'Add to cart');",
              "err": {},
              "uuid": "42b8a2c7-d0c2-478a-a201-e6c2db55dbdc",
              "parentUUID": "b42031ec-5957-490f-b5a1-9a63bb476a1a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve validar o ciclo Add/Remove para o produto: sauce-labs-bolt-t-shirt",
              "fullTitle": "Gerenciando carrinho Deve validar o ciclo Add/Remove para o produto: sauce-labs-bolt-t-shirt",
              "timedOut": null,
              "duration": 1180,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Cria seletores dinâmicos para o produto atual da iteração\nconst ADD_SELECTOR = `[data-test=\"add-to-cart-${produtoId}\"]`;\nconst REMOVE_SELECTOR = `[data-test=\"remove-${produtoId}\"]`;\n// Adicionar o item ao carrinho\ncy.get(ADD_SELECTOR).click();\n// Asserção: Confirma que o estado mudou para \"Remove\"\ncy.get(REMOVE_SELECTOR).should('be.visible').and('contain', 'Remove');\n// Remove o item do carrinho\ncy.get(REMOVE_SELECTOR).click();\n// Asserção: Confirma que o estado voltou para \"Add to cart\"\ncy.get(ADD_SELECTOR).should('be.visible').and('contain', 'Add to cart');",
              "err": {},
              "uuid": "c8e26904-7daf-4d90-b647-0e0b61b5223e",
              "parentUUID": "b42031ec-5957-490f-b5a1-9a63bb476a1a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve validar o ciclo Add/Remove para o produto: sauce-labs-fleece-jacket",
              "fullTitle": "Gerenciando carrinho Deve validar o ciclo Add/Remove para o produto: sauce-labs-fleece-jacket",
              "timedOut": null,
              "duration": 1134,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Cria seletores dinâmicos para o produto atual da iteração\nconst ADD_SELECTOR = `[data-test=\"add-to-cart-${produtoId}\"]`;\nconst REMOVE_SELECTOR = `[data-test=\"remove-${produtoId}\"]`;\n// Adicionar o item ao carrinho\ncy.get(ADD_SELECTOR).click();\n// Asserção: Confirma que o estado mudou para \"Remove\"\ncy.get(REMOVE_SELECTOR).should('be.visible').and('contain', 'Remove');\n// Remove o item do carrinho\ncy.get(REMOVE_SELECTOR).click();\n// Asserção: Confirma que o estado voltou para \"Add to cart\"\ncy.get(ADD_SELECTOR).should('be.visible').and('contain', 'Add to cart');",
              "err": {},
              "uuid": "f88b8e24-724c-4b37-9ab8-42b954b78666",
              "parentUUID": "b42031ec-5957-490f-b5a1-9a63bb476a1a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve validar o ciclo Add/Remove para o produto: sauce-labs-onesie",
              "fullTitle": "Gerenciando carrinho Deve validar o ciclo Add/Remove para o produto: sauce-labs-onesie",
              "timedOut": null,
              "duration": 1169,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Cria seletores dinâmicos para o produto atual da iteração\nconst ADD_SELECTOR = `[data-test=\"add-to-cart-${produtoId}\"]`;\nconst REMOVE_SELECTOR = `[data-test=\"remove-${produtoId}\"]`;\n// Adicionar o item ao carrinho\ncy.get(ADD_SELECTOR).click();\n// Asserção: Confirma que o estado mudou para \"Remove\"\ncy.get(REMOVE_SELECTOR).should('be.visible').and('contain', 'Remove');\n// Remove o item do carrinho\ncy.get(REMOVE_SELECTOR).click();\n// Asserção: Confirma que o estado voltou para \"Add to cart\"\ncy.get(ADD_SELECTOR).should('be.visible').and('contain', 'Add to cart');",
              "err": {},
              "uuid": "3baa8473-3216-473d-93d4-170cafa1c524",
              "parentUUID": "b42031ec-5957-490f-b5a1-9a63bb476a1a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve validar o ciclo Add/Remove para o produto: test.allthethings()-t-shirt-(red)",
              "fullTitle": "Gerenciando carrinho Deve validar o ciclo Add/Remove para o produto: test.allthethings()-t-shirt-(red)",
              "timedOut": null,
              "duration": 1156,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Cria seletores dinâmicos para o produto atual da iteração\nconst ADD_SELECTOR = `[data-test=\"add-to-cart-${produtoId}\"]`;\nconst REMOVE_SELECTOR = `[data-test=\"remove-${produtoId}\"]`;\n// Adicionar o item ao carrinho\ncy.get(ADD_SELECTOR).click();\n// Asserção: Confirma que o estado mudou para \"Remove\"\ncy.get(REMOVE_SELECTOR).should('be.visible').and('contain', 'Remove');\n// Remove o item do carrinho\ncy.get(REMOVE_SELECTOR).click();\n// Asserção: Confirma que o estado voltou para \"Add to cart\"\ncy.get(ADD_SELECTOR).should('be.visible').and('contain', 'Add to cart');",
              "err": {},
              "uuid": "9ba5cb20-7f28-4ffb-a780-20cbf79bb4af",
              "parentUUID": "b42031ec-5957-490f-b5a1-9a63bb476a1a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve adicionar um item e aumentar o contador do carrinho de 0 para 1",
              "fullTitle": "Gerenciando carrinho Deve adicionar um item e aumentar o contador do carrinho de 0 para 1",
              "timedOut": null,
              "duration": 1017,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Pré-condição: O badge não deve estar visível (0 itens)\ncy.get(BADGE_SELECTOR).should('not.exist');\n// Adicionar o item\ncy.get(ADD_BUTTON).click();\n// Asserção: O badge deve aparecer e mostrar o número '1'\ncy.get(BADGE_SELECTOR).should('be.visible').and('contain', '1');",
              "err": {},
              "uuid": "fc2952c7-1574-4798-8c6d-0ae375b1029f",
              "parentUUID": "b42031ec-5957-490f-b5a1-9a63bb476a1a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve remover um item e fazer o contador voltar de 1 para 0",
              "fullTitle": "Gerenciando carrinho Deve remover um item e fazer o contador voltar de 1 para 0",
              "timedOut": null,
              "duration": 1146,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Setup: Adiciona um item para que haja algo para remover\ncy.get(ADD_BUTTON).click();\ncy.get(BADGE_SELECTOR).should('contain', '1');\n// Ação: Remover o item\ncy.get(REMOVE_BUTTON).click();\n// Asserção: O badge deve desaparecer (contagem volta a zero)\ncy.get(BADGE_SELECTOR).should('not.exist');\n// Opcional: Verifica se o botão de ADD apareceu novamente\ncy.get(ADD_BUTTON).should('be.visible');",
              "err": {},
              "uuid": "ccfbeb64-0431-4d84-ac51-9ddcb16d92c9",
              "parentUUID": "b42031ec-5957-490f-b5a1-9a63bb476a1a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve adicionar um subconjunto de itens e validar seu conteúdo no carrinho",
              "fullTitle": "Gerenciando carrinho Deve adicionar um subconjunto de itens e validar seu conteúdo no carrinho",
              "timedOut": null,
              "duration": 1290,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Array para armazenar os dados dos itens que VAMOS ADICIONAR\nconst itensAdicionados = [];\n// Adiciona os primeiros 3 produtos ao carrinho e armazena nome/preço\ncy.get('.inventory_item').each(($item, index, $list) => {\n  if (index < ITENS_ADICIONADOS_COUNT) {\n    const nome = $item.find('.inventory_item_name').text();\n    const preco = $item.find('.inventory_item_price').text();\n    itensAdicionados.push({\n      name: nome,\n      price: preco\n    });\n    cy.wrap($item).contains('Add to cart').click();\n  }\n}).then(() => {\n  // Navega para o carrinho APÓS a conclusão da adição\n  cy.get(CART_LINK).click();\n  // Asserção: Verifica se a quantidade de itens no carrinho é 3\n  cy.get('.cart_item').should('have.length', itensAdicionados.length);\n  // Asserção: Valida se cada item exibido no carrinho é um item adicionado\n  cy.get('.inventory_item_name').each(($nomeExibido, idx) => {\n    const nomeEsperado = itensAdicionados[idx].name;\n    expect($nomeExibido.text()).to.equal(nomeEsperado);\n  });\n});",
              "err": {},
              "uuid": "b66f0407-ac18-4b51-bfd6-d319ee46a7a2",
              "parentUUID": "b42031ec-5957-490f-b5a1-9a63bb476a1a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "f59f78c6-d0bd-4670-a641-d5afc1c95f51",
              "title": "Suíte de Navegação e Remoção no Carrinho (Start: Cart Page)",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve redirecionar o usuário para a página de produtos...",
                  "fullTitle": "Gerenciando carrinho Suíte de Navegação e Remoção no Carrinho (Start: Cart Page) Deve redirecionar o usuário para a página de produtos...",
                  "timedOut": null,
                  "duration": 1408,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('[data-test=\"continue-shopping\"]').click();\ncy.url().should('include', '/inventory.html');",
                  "err": {},
                  "uuid": "37acbd88-f306-44ca-97ba-6c899325f11b",
                  "parentUUID": "f59f78c6-d0bd-4670-a641-d5afc1c95f51",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve garantir que todos os itens são removíveis e a lista esvazia",
                  "fullTitle": "Gerenciando carrinho Suíte de Navegação e Remoção no Carrinho (Start: Cart Page) Deve garantir que todos os itens são removíveis e a lista esvazia",
                  "timedOut": null,
                  "duration": 1500,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Ação: Itera para remover todos os itens sequencialmente\nfor (let i = 0; i < ITENS_ADICIONADOS_COUNT; i++) {\n  // Clica no primeiro botão de remover que encontrar (a lista se reordena)\n  cy.get('[data-test^=\"remove-\"]').first().click();\n}\n// ASSERÇÃO 1: Verifica se o contêiner de itens do carrinho sumiu ou está vazio.\n// Esta é a prova de que a lista está vazia.\ncy.get('.cart_item').should('not.exist');\n// ASSERÇÃO 2: Verifica se o badge (o número no ícone) desapareceu.\ncy.get(CART_LINK).find(BADGE_SELECTOR).should('not.exist');",
                  "err": {},
                  "uuid": "719ab376-9da7-4cf5-8840-7aaeb793300b",
                  "parentUUID": "f59f78c6-d0bd-4670-a641-d5afc1c95f51",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "37acbd88-f306-44ca-97ba-6c899325f11b",
                "719ab376-9da7-4cf5-8840-7aaeb793300b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2908,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "b6933ec3-fa10-4620-928a-4e49a5b6053a",
            "2e864ae4-ffaa-442b-8bfa-9f7747976621",
            "42b8a2c7-d0c2-478a-a201-e6c2db55dbdc",
            "c8e26904-7daf-4d90-b647-0e0b61b5223e",
            "f88b8e24-724c-4b37-9ab8-42b954b78666",
            "3baa8473-3216-473d-93d4-170cafa1c524",
            "9ba5cb20-7f28-4ffb-a780-20cbf79bb4af",
            "fc2952c7-1574-4798-8c6d-0ae375b1029f",
            "ccfbeb64-0431-4d84-ac51-9ddcb16d92c9",
            "b66f0407-ac18-4b51-bfd6-d319ee46a7a2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13205,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "318e77cd-5db3-4e18-8d3a-d7ee291a6dbc",
      "title": "",
      "fullFile": "cypress\\e2e\\finalizacao-de-compra\\finalizacao-de-compra.cy.js",
      "file": "cypress\\e2e\\finalizacao-de-compra\\finalizacao-de-compra.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ff3428da-f0b8-43d5-b2e8-327c6c0295f8",
          "title": "Finalizando a compra",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve redirecionar o usuário para página de inclusão de dados pessoais e endereço",
              "fullTitle": "Finalizando a compra Deve redirecionar o usuário para página de inclusão de dados pessoais e endereço",
              "timedOut": null,
              "duration": 2438,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-test=\"checkout\"]').should('be.visible').click();\n// Asserção: verificar se o usuário foi redirecionado para a página de inclusão de dados\ncy.url().should('include', '/checkout-step-one.html');",
              "err": {},
              "uuid": "4c0f79b8-56fe-436f-bdf1-4ccaf8130418",
              "parentUUID": "ff3428da-f0b8-43d5-b2e8-327c6c0295f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve redirecionar o usuário para página com o resumo do pedido",
              "fullTitle": "Finalizando a compra Deve redirecionar o usuário para página com o resumo do pedido",
              "timedOut": null,
              "duration": 2402,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-test=\"checkout\"]').should('be.visible').click();\ncy.url().should('include', '/checkout-step-one.html');\ncy.get('[data-test=\"firstName\"]').type('Teste');\ncy.get('[data-test=\"lastName\"]').type('Compra');\ncy.get('[data-test=\"postalCode\"]').type('12345678');\ncy.get(CONTINUE_BUTTON).click();\n// Asserção: verificar se o usuário foi redirecionado para a página de resumo do pedido\ncy.url().should('include', '/checkout-step-two.html');",
              "err": {},
              "uuid": "894280c7-f64a-47d6-8946-4acee6afa22d",
              "parentUUID": "ff3428da-f0b8-43d5-b2e8-327c6c0295f8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4c0f79b8-56fe-436f-bdf1-4ccaf8130418",
            "894280c7-f64a-47d6-8946-4acee6afa22d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4840,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7e70344f-6d88-4a88-9b9a-17f46e5a0c6e",
      "title": "",
      "fullFile": "cypress\\e2e\\visualizacao-de-produtos\\visualizacao-de-produtos.cy.js",
      "file": "cypress\\e2e\\visualizacao-de-produtos\\visualizacao-de-produtos.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a9082c98-e107-491c-8fe4-3f7f5ed4a252",
          "title": "Página de produtos",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve ordenar os produtos por nome de A a Z",
              "fullTitle": "Página de produtos Deve ordenar os produtos por nome de A a Z",
              "timedOut": null,
              "duration": 1609,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// 1. Clica no botão de filtro e seleciona a opção 'A-Z'\ncy.get('[data-test=\"product-sort-container\"]').select('az');\n// 2. Coleta os nomes dos produtos da página e verifica a ordenação\ncy.get('.inventory_item_name').then($names => {\n  // 3. Extrai o texto de cada elemento em um array\n  const names = $names.map((index, el) => Cypress.$(el).text()).get();\n  // 4. Cria uma cópia e ordena os nomes como se fosse o resultado esperado\n  const sortedNames = [...names].sort();\n  // 5. Compara se a lista da página é igual à lista ordenada\n  expect(names).to.deep.equal(sortedNames);\n});",
              "err": {},
              "uuid": "268eeb57-c47f-4a6d-a27d-0d8aeaf26b5e",
              "parentUUID": "a9082c98-e107-491c-8fe4-3f7f5ed4a252",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve ordenar os produtos por nome de Z a A",
              "fullTitle": "Página de produtos Deve ordenar os produtos por nome de Z a A",
              "timedOut": null,
              "duration": 1509,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// 1. Clica no botão de filtro e seleciona a opção 'Z-A'\ncy.get('[data-test=\"product-sort-container\"]').select('za');\n// 2. Coleta os nomes dos produtos da página e verifica a ordenação\ncy.get('.inventory_item_name').then($names => {\n  // 3. Extrai o texto de cada elemento em um array\n  const names = $names.map((index, el) => Cypress.$(el).text()).get();\n  // 4. Cria uma cópia e ordena os nomes como se fosse o resultado esperado\n  const sortedNames = [...names].sort().reverse();\n  // 5. Compara se a lista da página é igual à lista ordenada\n  expect(names).to.deep.equal(sortedNames);\n});",
              "err": {},
              "uuid": "c797f336-c25a-4152-ba36-7334b46c8b5c",
              "parentUUID": "a9082c98-e107-491c-8fe4-3f7f5ed4a252",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve ordenar os produtos por preço, do mais barato ao mais caro",
              "fullTitle": "Página de produtos Deve ordenar os produtos por preço, do mais barato ao mais caro",
              "timedOut": null,
              "duration": 1099,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// 1. Clica no botão de filtro e seleciona a opção 'low to high'\ncy.get('[data-test=\"product-sort-container\"]').select('lohi');\n// 2. Coleta os preços dos produtos da página\ncy.get('.inventory_item_price').then($prices => {\n  // 3. Extrai o texto, remove o '$' e converte para número\n  const prices = $prices.toArray().map(el => parseFloat(el.innerText.replace('$', '')));\n  // 4. Cria uma cópia e ordena os preços numericamente de forma crescente\n  const sortedPrices = [...prices].sort((a, b) => a - b);\n  // 5. Compara se a lista da página é igual à lista ordenada\n  expect(prices).to.deep.equal(sortedPrices);\n});",
              "err": {},
              "uuid": "5981e289-07ff-4048-ad76-5d349470b385",
              "parentUUID": "a9082c98-e107-491c-8fe4-3f7f5ed4a252",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve ordenar os produtos por preço, do mais caro ao mais barato",
              "fullTitle": "Página de produtos Deve ordenar os produtos por preço, do mais caro ao mais barato",
              "timedOut": null,
              "duration": 1018,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// 1. Clica no botão de filtro e seleciona a opção 'high to low'\ncy.get('[data-test=\"product-sort-container\"]').select('hilo');\n// 2. Coleta os preços dos produtos da página\ncy.get('.inventory_item_price').then($prices => {\n  // 3. Extrai o texto, remove o '$' e converte para número\n  const prices = $prices.toArray().map(el => parseFloat(el.innerText.replace('$', '')));\n  // 4. Cria uma cópia e ordena os preços numericamente de forma decrescente\n  const sortedPrices = [...prices].sort((a, b) => b - a);\n  // 5. Compara se a lista da página é igual à lista ordenada\n  expect(prices).to.deep.equal(sortedPrices);\n});",
              "err": {},
              "uuid": "dca5d22b-f26a-4858-b34b-d8a0e46369ff",
              "parentUUID": "a9082c98-e107-491c-8fe4-3f7f5ed4a252",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "268eeb57-c47f-4a6d-a27d-0d8aeaf26b5e",
            "c797f336-c25a-4152-ba36-7334b46c8b5c",
            "5981e289-07ff-4048-ad76-5d349470b385",
            "dca5d22b-f26a-4858-b34b-d8a0e46369ff"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5235,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "22bbfabb-3bf2-4d2e-b435-1272116b490a",
      "title": "",
      "fullFile": "cypress\\e2e\\login-do-cliente\\login-do-cliente.cy.js",
      "file": "cypress\\e2e\\login-do-cliente\\login-do-cliente.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d1f9524a-89a1-4234-9bd0-1c6f848d0a20",
          "title": "Página de login",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve preencher os campos de usuário e senha corretamente e autenticar o usuário no site",
              "fullTitle": "Página de login Deve preencher os campos de usuário e senha corretamente e autenticar o usuário no site",
              "timedOut": null,
              "duration": 1258,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-test=\"username\"]').type('standard_user');\ncy.get('[data-test=\"password\"]').type('secret_sauce');\ncy.get('[data-test=\"login-button\"]').click();\n// Asserção: verificar se o usuário foi redirecionado para a página de produtos\ncy.url().should('include', '/inventory.html');",
              "err": {},
              "uuid": "40a2f6bc-2f52-4ea1-a051-961104fbebfe",
              "parentUUID": "d1f9524a-89a1-4234-9bd0-1c6f848d0a20",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve preencher o campo de senha corretamente e deixar o de usuário vazio; o usuário não deve ser autenticado no site",
              "fullTitle": "Página de login Deve preencher o campo de senha corretamente e deixar o de usuário vazio; o usuário não deve ser autenticado no site",
              "timedOut": null,
              "duration": 681,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-test=\"password\"]').type('secret_sauce');\ncy.get('[data-test=\"login-button\"]').click();\n// Asserção: verificar se a mensagem de erro é exibida\ncy.get('[data-test=\"error\"]').should('be.visible').and('contain', 'Epic sadface: Username is required');",
              "err": {},
              "uuid": "de63cbe9-6bef-4745-af30-f2eec4371fd4",
              "parentUUID": "d1f9524a-89a1-4234-9bd0-1c6f848d0a20",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve preencher o campo de usuário corretamente e deixar o de senha vazio; o usuário não deve ser autenticado no site",
              "fullTitle": "Página de login Deve preencher o campo de usuário corretamente e deixar o de senha vazio; o usuário não deve ser autenticado no site",
              "timedOut": null,
              "duration": 557,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-test=\"username\"]').type('standard_user');\ncy.get('[data-test=\"login-button\"]').click();\n// Asserção: verificar se a mensagem de erro é exibida\ncy.get('[data-test=\"error\"]').should('be.visible').and('contain', 'Epic sadface: Password is required');",
              "err": {},
              "uuid": "c658f817-08d2-4f58-8cc9-b715c39b320e",
              "parentUUID": "d1f9524a-89a1-4234-9bd0-1c6f848d0a20",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve preencher o campo de usuário com usuário bloqueado e senha válida; o usuário não deve ser autenticado no site",
              "fullTitle": "Página de login Deve preencher o campo de usuário com usuário bloqueado e senha válida; o usuário não deve ser autenticado no site",
              "timedOut": null,
              "duration": 888,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-test=\"username\"]').type('locked_out_user');\ncy.get('[data-test=\"password\"]').type('secret_sauce');\ncy.get('[data-test=\"login-button\"]').click();\n// Asserção: verificar se a mensagem de erro é exibida\ncy.get('[data-test=\"error\"]').should('be.visible').and('contain', 'Epic sadface: Sorry, this user has been locked out.');",
              "err": {},
              "uuid": "7896fdb2-012e-4432-b2fa-e5a53e995c23",
              "parentUUID": "d1f9524a-89a1-4234-9bd0-1c6f848d0a20",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "40a2f6bc-2f52-4ea1-a051-961104fbebfe",
            "de63cbe9-6bef-4745-af30-f2eec4371fd4",
            "c658f817-08d2-4f58-8cc9-b715c39b320e",
            "7896fdb2-012e-4432-b2fa-e5a53e995c23"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3384,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "129e368f-a766-4c38-9019-d10ff052233c",
      "title": "",
      "fullFile": "cypress\\e2e\\confirmacao-do-pedido\\confirmacao-do-pedido.cy.js",
      "file": "cypress\\e2e\\confirmacao-do-pedido\\confirmacao-do-pedido.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "66d99aaf-40b9-49d1-a276-c9eed219ab9c",
          "title": "Confirmação do pedido",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve redirecionar o usuário para página de exibição da confirmação de compra",
              "fullTitle": "Confirmação do pedido Deve redirecionar o usuário para página de exibição da confirmação de compra",
              "timedOut": null,
              "duration": 4702,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-test=\"finish\"]').should('be.visible').click();\n// Asserção: verificar se o usuário foi redirecionado para a página de conclusão do chechout\ncy.url().should('include', '/checkout-complete.html');\n// Asserção: verificar se a mensagem de confirmação de compra é exibida\ncy.get('[data-test=\"complete-header\"]').should('be.visible').and('contain', 'Thank you for your order!');",
              "err": {},
              "uuid": "6e1ea7fc-4a17-4a03-a210-371a5e4f7ab5",
              "parentUUID": "66d99aaf-40b9-49d1-a276-c9eed219ab9c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6e1ea7fc-4a17-4a03-a210-371a5e4f7ab5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4702,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.4"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/results",
        "overwrite": false,
        "html": true,
        "json": true,
        "charts": true,
        "embeddedScreenshots": true,
        "inlineAssets": true,
        "saveAllAttempts": false
      },
      "version": "6.3.0"
    }
  }
}